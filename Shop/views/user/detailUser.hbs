<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />

  <title>Thế giới điện thoại</title>
  <link rel="shortcut icon" href="img/favicon.ico" />
  <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
  <!-- Load font awesome icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    crossorigin="anonymous" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous" />

  <script src="js/Jquery/Jquery.min.js"></script>

  <!-- our files -->
  <!-- css -->
  <link rel="stylesheet" href="css/style.css" />
  <link rel="stylesheet" href="css/topnav.css" />
  <link rel="stylesheet" href="css/header.css" />
  <link rel="stylesheet" href="css/taikhoan.css" />
  <link rel="stylesheet" href="css/gioHang.css" />
  <link rel="stylesheet" href="css/nguoidung.css" />
  <link rel="stylesheet" href="css/footer.css" />
  <!-- js -->
  {{!--
  <script src="data/products.js"></script> --}}
  <script src="js/classes.js"></script>
  <script src="js/dungchung.js"></script>

  <script src="js/nguoidung.js"></script>
</head>

<body>
  {{> common/commonHeader}}

  <section>

    <img src="img/banners/blackFriday.gif" alt="" style="width: 100%;" />

    <div class="infoUser row gap-2">
      <hr />
      <div class="col-4">
        <img src="{{user.avatar}}" alt="{{user.name}}" width="300" height="300" id="avatar">
        <input type="file" id="fileUser" class="mt-2" />
      </div>
      <table class="col-7">
        <tbody>
          <tr>
            <th colspan="3">THÔNG TIN KHÁCH HÀNG</th>
          </tr>
          <tr>
            <td>Họ và tên: </td>
            <td> <input type="text" value="{{user.name}}" readonly="" id="name" /> </td>
            <td>
              <i class="fa fa-pencil" onclick="changeInfo(this, 'username')"></i>
            </td>
          </tr>
          <tr>
            <td>PhoneNumber: </td>
            <td>
              <input type="text" value="{{user.phoneNumber}}" readonly="" id="phoneNumber" />
            </td>
            <td>
              <i class="fa fa-pencil" onclick="changeInfo(this, 'username')"></i>
            </td>
          </tr>
          <tr>
            <td>Email: </td>
            <td>
              <input type="text" value="{{user.email}}" readonly="" id="email" />
            </td>
          </tr>
          <tr>
            <td>Mật khẩu: </td>
            <td style="text-align: center;">
              <i class="fa fa-pencil" id="butDoiMatKhau" onclick="openChangePass()"> Đổi mật khẩu</i>
            </td>
            <td></td>
          </tr>
          <tr>
            <td colspan="3" id="khungDoiMatKhau" class="">
              <table>
                <tbody>
                  <tr>
                    <td>
                      <div>Mật khẩu cũ:</div>
                    </td>
                    <td>
                      <div><input type="password" /></div>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <div>Mật khẩu mới:</div>
                    </td>
                    <td>
                      <div><input type="password" /></div>
                    </td>
                  </tr>
                  <tr>
                    <td>
                      <div>Xác nhận mật khẩu:</div>
                    </td>
                    <td>
                      <div><input type="password" /></div>
                    </td>
                  </tr>
                  <tr>
                    <td></td>
                    <td>
                      <div><button id="changePass">Đồng ý</button></div>
                    </td>
                  </tr>
                </tbody>
              </table>
            </td>
          </tr>
          <tr>
            <td>Số dư tài khoản: </td>
            <td>
              <input type="text" value="" readonly="" id="money" />

            </td>
            <td>
              <button type="button" class="btn btn-outline-success" data-bs-toggle="modal"
                data-bs-target="#exampleModal">Nạp tiền</button>
            </td>
          </tr>
          <tr>
            <td>Tổng tiền đã mua: </td>
            <td> <input type="text" value="11.990.000₫" readonly="" /> </td>
            <td></td>
          </tr>
          <tr>
            <td>Số lượng sản phẩm đã mua: </td>
            <td> <input type="text" value="1" readonly="" /> </td>
            <td></td>
          </tr>
          <tr>
            <td colspan="2">
              <button type="button" class="btn btn-primary" id="changeInfo">Update</button>
            </td>
          </tr>
        </tbody>
      </table>

    </div>

    <div class="listDonHang">
      <table class="listSanPham">
        <tbody id="lsOrder">



        </tbody>
      </table>
      <hr />
    </div>
  </section>
  <!-- End Section -->

  <div class="plc">
    <section>
      <ul class="flexContain">
        <li>Giao hàng hỏa tốc trong 1 giờ</li>
        <li>Thanh toán linh hoạt: tiền mặt, visa / master, trả góp</li>
        <li>Trải nghiệm sản phẩm tại nhà</li>
        <li>Lỗi đổi tại nhà trong 1 ngày</li>
        <li>Hỗ trợ suốt thời gian sử dụng.
          <br />Hotline:
          <a href="tel:12345678" style="color: #288ad6;">12345678</a>
        </li>
      </ul>
    </section>
  </div>

  <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="updateInfoToast" class="toast hide bg-success text-white" role="alert" aria-live="assertive"
      aria-atomic="true" data-bs-autohide="false">
      <div class="toast-header">
        <strong class="me-auto">Notification</strong>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">
        Update profile successfull
        <br />Refresh in 2 seconds...
      </div>
    </div>
  </div>

  <div class="position-fixed bottom-0 end-0 p-3" style="z-index: 11">
    <div id="errorPass" class="toast hide bg-danger text-white" role="alert" aria-live="assertive" aria-atomic="true"
      data-bs-autohide="false">
      <div class="toast-header">
        <strong class="me-auto">Notification</strong>
        <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
      </div>
      <div class="toast-body">

      </div>
    </div>
  </div>

  {{> common/commonFooter}}

  <i class="fa fa-arrow-up" id="goto-top-page" onclick="gotoTop()"></i>
  <!-- Code injected by live-server -->

  {{!-- modal --}}
  <!-- Modal -->
  <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Thông tin nạp tiền</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <div class="input-group mb-3">
            <span class="input-group-text" id="basic-addon1">Số tiền nạp</span>
            <input type="number" id="moneyInput" class="form-control" placeholder="Nhập số tiền muốn nạp">
          </div>
          <div class="alert alert-danger fw-bold" role="alert" id="messAddMoney" style="display:none; font-size:0.8rem">
            Số tiền phải là số lớn hơn 10.000 và chia hết cho 1000
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
          <button type="button" class="btn btn-primary" id="addMoneyBtn">Nạp tiền</button>
        </div>
      </div>
    </div>
  </div>


  <div class="modal fade" id="exampleModal1" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">Chi tiết thông tin đơn hàng</h5>
          <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        <div class="modal-body">
          <table class="table table-striped">
            <thead>
              <tr>
                <th scope="col">#</th>
                <th scope="col">Tên sản phẩm</th>
                <th scope="col">Giá</th>
                <th scope="col">Số lượng</th>
                <th scope="col"></th>
              </tr>
            </thead>
            <tbody id="detailOrder">

            </tbody>
          </table>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        </div>
      </div>
    </div>
  </div>
  {{!-- end moal --}}

</body>

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"
  integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>

</html>

<script>
  const socket = new io();
  let detailOrder = document.getElementById("detailOrder")
  let lsOrder = document.getElementById("lsOrder");
  function convertToVND(number) {
    // Using toLocaleString to format the number as currency in VND
    number = parseInt(number);
    let vndFormatted = number.toLocaleString('vi-VN', {
      style: 'currency',
      currency: 'VND'
    });

    return vndFormatted.replace("₫", "VNĐ");
  }
  function renderDetailOrder(listDO) {
    let content = '';
    for (let i = 0; i < listDO.length; i++) {
      content += ` <tr>
                <th scope="row">${i + 1}</th>
                <td>${listDO[i].name}</td>
                <td>${convertToVND(listDO[i].price)}</td>
                <td>${listDO[i].quantity}</td>
                <td><a style="text-decoration: none;" href="/product/detailProducts?id=${listDO[i].productId}">Mua lại</a></td>
              </tr>`
    }
    detailOrder.innerHTML = content;
  }
  async function showDetail(btn) {
    //console.log(btn);
    let id = btn.dataset.id;
    const res = await fetch(`/orderDetail/${id}`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json"
      },
    });
    let resjson = await res.json();
    //console.log(resjson);
    renderDetailOrder(resjson.listOrderDetails)

  }
  document.addEventListener("DOMContentLoaded", async function () {
    const res = await fetch(`https://localhost:3002/tkgd/${localStorage.getItem('token') || ""}`, {
      method: "GET",
    });
    let response = await res.json();
    document.getElementById('money').value = convertToVND(response);
  })


  document.getElementById('addMoneyBtn').addEventListener('click', async () => {
    try {
      const money = parseInt(document.getElementById('moneyInput').value);
      const mess = document.getElementById('messAddMoney');
      if (money < 10000 || money % 1000 != 0) {
        mess.style.display = 'block';
        return;
      }
      mess.style.display = 'none';
      const res = await fetch(`https://localhost:3002/tkgd/add/${localStorage.getItem('token') || ""}`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify({ money: money })
      });
      let response = await res.json();
      window.location.href = response;
    } catch (e) { }

  })

  function formatDateTime(sqlTimestampString) {
    // Split the timestamp string into date and time parts
    var [datePart, timePart] = sqlTimestampString.split(' ');

    // Split the date part into year, month, and day
    var [year, month, day] = datePart.split('-');

    // Split the time part into hours, minutes, and seconds
    var [hours, minutes, seconds] = timePart.split(':');
    var jsDate = new Date(year, month - 1, day, hours, minutes, seconds);

    var currentDate = new Date(jsDate.getTime() + 7 * 60 * 60 * 1000);

    // Convert the Date object to an ISO string
    var d = currentDate.toString();
    console.log(d)
    // Remove milliseconds and format the string for SQL timestamp
    var sqlTimestamp = d.slice(0, 24)
    return sqlTimestamp;
  }

  function renderListOrder(listOrders) {
    let content = `<tr>
            <th colspan="6">
              <h3 style="text-align:center;">
                DANH SÁCH ĐƠN HÀNG</h3>
            </th>
          </tr>
          <tr>
            <th class = "soluong">STT</th>
            <th class = "soluong">Tổng tiền</th>
            <th class = "soluong">Trạng thái</th>
            <th>Đã thanh toán</th>
            <th>Ngày đặt</th>
            <th>Chi tiết</th>
          </tr>`;
    for (let i = 0; i < listOrders.length; i++) {
      content += ` <tr>
            <td class = "soluong">${i + 1}</td>
            <td class = "soluong">${convertToVND(listOrders[i].totalCost)}</td>
            <td class = "soluong">${listOrders[i].status}</td>
            <td class = "soluong">
              ${listOrders[i].isPayment}
            </td>
            <td class = "soluong">${formatDateTime(listOrders[i].timeOrder.slice(0, 19).replace("T", " "))}</td>
            <td style="display: flex; justify-content: center; padding:5px;"> <button class="btn btn-outline-success" class="btn btn-outline-success" data-bs-toggle="modal"
                data-bs-target="#exampleModal1" data-id="${listOrders[i].orderId}" onclick="showDetail(this)"><i class="ace-icon fa fa-eye bigger-120"></i></button></td>
          </tr>
`
    }

    lsOrder.innerHTML = content;
  }
  // Order
  async function loadListOrder() {
    let userId = localStorage.getItem('idUser')
    //console.log(userId);
    const res = await fetch(`/order/${userId}`, {
      method: "GET",
      headers: {
        "Content-Type": "application/json",
      }
    });

    let resjson = await res.json();
    if (res.ok) {
      console.log(resjson);
      renderListOrder(resjson.listOrders)
    }

  }
  loadListOrder();
  socket.on('confirmOrder', async (data) => {
    loadListOrder();
  })

</script>