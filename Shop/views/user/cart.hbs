<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <link rel="shortcut icon" href="img/favicon.ico">
  <title>Thế giới điện thoại</title>
  <!-- Load font awesome icons -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"
    crossorigin="anonymous">
  <script src="https://code.jquery.com/jquery-3.6.1.min.js"
    integrity="sha256-o88AwQnZB+VDvE9tvIXrMQaPlFFSUTR+nldQm1LuPXQ=" crossorigin="anonymous"></script>
  <script src="https://cdn.socket.io/4.7.2/socket.io.min.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
  <!-- our files -->
  <!-- css -->
  <link rel="stylesheet" href="css/style.css">
  <link rel="stylesheet" href="css/topnav.css">
  <link rel="stylesheet" href="css/header.css">
  <link rel="stylesheet" href="css/taikhoan.css">
  <link rel="stylesheet" href="css/gioHang.css">
  <link rel="stylesheet" href="css/footer.css">
  <!-- js -->

  <script src="js/classes.js"></script>
  <script src="js/dungchung.js"></script>
  <style>
    * {
      box-sizing: border-box;
    }


    #section-wrapper {
      width: 100%;
      padding: 10px;
    }

    .box-wrapper {
      position: relative;
      display: none;
      width: 100%;
      margin: auto;
      margin-top: 35px;
      margin-bottom: 30px;
      border-radius: 30px;
    }


    .info-title {
      text-align: left;
      font-size: 28px;
      letter-spacing: 0.5px;
    }

    .info-sub-title {
      font-size: 18px;
      font-weight: 300;
      margin-top: 17px;
      letter-spacing: 0.5px;
      line-height: 26px;
    }

    .info-details {
      list-style: none;
      margin: 60px 0px;
    }

    .info-details li {
      margin-top: 25px;
      font-size: 18px;
      color: #fff;
    }

    .info-details li i {
      background: #879ddf;
      padding: 12px;
      border-radius: 50%;
      margin-right: 5px;
    }

    .info-details li a {
      color: #fff;
      text-decoration: none;
    }

    .info-details li a:hover {
      color: #75a8cc;
    }

    .social-icons {
      list-style: none;
      text-align: center;
      margin: 20px 0px;
    }

    .social-icons li {
      display: inline-block;
    }

    .social-icons li i {
      background: #75a8cc;
      color: #fff;
      padding: 15px;
      font-size: 20px;
      border-radius: 22%;
      margin: 0px 5px;
      cursor: pointer;
      transition: all .5s;
    }

    .social-icons li i:hover {
      background: #fff;
      color: #000000;
    }

    .form-wrap {
      width: 100%;
      float: right;
      padding: 40px 25px 35px 25px;
      border-radius: 30px 30px 30px 30px;
      background: #ecf0f3;
    }

    .form-title {
      text-align: left;
      margin-left: 23px;
      font-size: 28px;
      letter-spacing: 0.5px;
    }

    .form-fields {
      display: table;
      width: 100%;
      padding: 15px 5px 5px 5px;
    }

    .form-fields input,
    .form-fields textarea {
      border: none;
      outline: none;
      background: none;
      font-size: 18px;
      color: #555;
      padding: 20px 10px 20px 5px;
      width: 100%
    }

    .form-fields textarea {
      height: 150px;
      resize: none;
    }

    .form-group {
      width: 96%;
      float: left;
      padding: 0px 30px;
      margin: 14px 12px;
      border-radius: 25px;
      box-shadow: inset 8px 8px 8px #cbced1, inset -8px -8px 8px #ffffff;
    }

    .form-fields .form-group:last-child {
      width: 96%;
    }

    .submit-button {
      width: 40%;
      height: 60px;
      margin: 0px 12px;
      border-radius: 30px;
      font-size: 20px;
      ;
      font-weight: 700;
      outline: none;
      border: none;
      cursor: pointer;
      color: #fff;
      text-align: center;
      background: #75a8cc;
      box-shadow: 3px 3px 8px #b1b1b1, -3px -3px 8px #ffffff;
      transition: .5s;
    }

    .submit-button:hover {
      background: #31279d;
    }

    /* Responsive css */
    @media only screen and (max-width: 767px) {
      .box-wrapper {
        width: 100%;
      }

      .info-wrap,
      .form-wrap {
        width: 100%;
        height: inherit;
        float: none;
      }

      .info-wrap {
        border-radius: 30px 30px 0px 0px;
      }

      .form-wrap {
        border-radius: 0px 0px 30px 30px;
      }

      .form-group {
        width: 100%;
        float: none;
        margin: 25px 0px;
      }

      .form-fields .form-group:last-child,
      .submit-button {
        width: 50%;
      }

      .submit-button {
        margin: 10px 0px;
      }

    }

    .paymethod {
      font-size: 1.2em;
      margin: 20px 10px 10px 15px;
    }

    .paymethod label {
      font-weight: bold;
    }
  </style>
</head>

<body>
  <div class="top-nav group">
    <section>
      <div class="social-top-nav">
        <a class="fa fa-facebook"></a>
        <a class="fa fa-twitter"></a>
        <a class="fa fa-google"></a>
        <a class="fa fa-youtube"></a>
      </div> <!-- End Social Topnav -->
      <ul class="top-nav-quicklink flexContain">
        <li><a href="/"><i class="fa fa-home"></i> Trang chủ</a></li>
        <li><a href="/news"><i class="fa fa-newspaper-o"></i> Tin tức</a></li>
        <li><a href="/hiring"><i class="fa fa-handshake-o"></i> Tuyển dụng</a></li>
        <li><a href="/about"><i class="fa fa-info-circle"></i> Giới thiệu</a></li>
        <li><a href="/maintenance"><i class="fa fa-wrench"></i> Bảo hành</a></li>
        <li><a href="/contact"><i class="fa fa-phone"></i> Liên hệ</a></li>
      </ul> <!-- End Quick link -->
    </section><!-- End Section -->
  </div><!-- End Top Nav  -->

  <section>
    <div class="header group">
      <div class="logo">
        <a href="/">
          <img src="img/logo.jpg" alt="Trang chủ Smartphone Store" title="Trang chủ Smartphone Store">
        </a>
      </div> <!-- End Logo -->

      <div class="content">
        {{!-- <div class="search-header" style="position: relative; left: 162px; top: 1px;">
          <form class="input-search" method="get" action="/">
            <div class="autocomplete">
              <input id="search-box" name="search" autocomplete="off" type="text"
                placeholder="Nhập từ khóa tìm kiếm...">
              <button type="submit">
                <i class="fa fa-search"></i>
                Tìm kiếm
              </button>
            </div>
          </form> <!-- End Form search -->
          <div class="tags">
            <strong>Từ khóa: </strong>
            <a href="index.html?search=Samsung">Samsung</a><a href="index.html?search=iPhone">iPhone</a><a
              href="index.html?search=Huawei">Huawei</a><a href="index.html?search=Oppo">Oppo</a><a
              href="index.html?search=Mobi">Mobi</a>
          </div>
        </div> <!-- End Search header --> --}}

        <div class="tools-member">
          <div class="member">
            <a href="/login">
              <i class="fa fa-user"></i>
              Tài khoản
            </a>
            <div class="menuMember">
              <a href="/detailUser">Trang người dùng</a>
              <form action="/auth/logout" method="post"><button type="submit">
                  Đăng xuất
                </button></form>
            </div>

          </div> <!-- End Member -->

          <div class="cart">
            <a href="/cart">
              <i class="fa fa-shopping-cart"></i>
              <span>Giỏ hàng</span>
              <span class="cart-number" id="cartNumber"></span>
            </a>
          </div> <!-- End Cart -->
        </div><!-- End Tools Member -->
      </div> <!-- End Content -->
    </div> <!-- End Header -->
  </section>

  <section style="min-height: 85vh">


    <table class="listSanPham">
      <tbody id="listProductinCart">
      </tbody>
    </table>
    <div class="box-wrapper" id="paymentdetail">
      <div class="form-wrap">
        <form name="myform">
          <h2 class="form-title">Xác nhận thông tin đặt hàng</h2>
          <div class="form-fields">
            <div class="form-group">
              <input type="text" class="fname" id="fullname" name="fullname" required
                placeholder="Họ và tên người nhận hàng">
            </div>

            <div class="form-group">
              <input type="text" class="email" name="address" placeholder="Địa chỉ nhận hàng" required>
            </div>
            <div class="form-group">
              <input type="number" class="phone" name="phone" required placeholder="Số điện thoại người nhận">
            </div>
            <div class="form-group">
              <textarea name="message" id="" placeholder="Nội dung ghi chú thêm"></textarea>
            </div>
            <div class="paymethod">
              <label>Phương thức thanh toán</label>
              <div class="row">
                <div class="col-6">Tiền mặt</div>
                <div class="col-2">
                  <input type="radio" name="paymentmethod" value="cash" checked />
                </div>
              </div>
              <div class="row">
                <div class="col-6">Online</div>
                <div class="col-2">
                  <input type="radio" name="paymentmethod" value="online" />
                </div>
              </div>



            </div>
            <div class="paymethod">
              <label><b>Tổng cộng: </b>
                <b id="total"></b>
              </label>

            </div>
          </div>
          <input type="submit" value="Đặt hàng" class="submit-button">
        </form>
      </div>
    </div>
  </section> <!-- End Section -->


  <i class="fa fa-arrow-up" id="goto-top-page" onclick="gotoTop()"></i>
  <div id="alert">
    <span id="closebtn">&otimes;</span>
  </div>

  {{> common/commonFooter}}

</body>

</html>



<script>
  let cartNumber = document.getElementById("cartNumber");
  let listProductinCart = document.getElementById("listProductinCart");
  let paymentdetail = document.getElementById('paymentdetail');
  let myform = document.forms['myform'];
  let fullname = myform.elements['fullname']
  let total = document.getElementById('total');
  const socket = new io();



  function updateCartnumber() {
    data = { userId: localStorage.getItem("idUser") }
    $.ajax({
      type: "GET",
      url: `/cart/listcart`,
      data: data,
      contentType: 'application/json',
      dataType: "json",
      success: function (data) {
        console.log(data);
        cartNumber.innerHTML = data.listPCart.length;
        renderListProductInCart(data.listPCart)
      },
      error: function (result) {
        console.log(result)
      }
    });
  }

  function convertToVND(number) {
    // Using toLocaleString to format the number as currency in VND
    let vndFormatted = number.toLocaleString('vi-VN', {
      style: 'currency',
      currency: 'VND'
    });
    return vndFormatted;
  }
  updateCartnumber();
  function tinhTongtien(listCart) {
    let sum = 0;
    for (let i = 0; i < listCart.length; i++) {
      sum += (100 - listCart[i].discount) * listCart[i].price * listCart[i].quantity / 100
    }
    //console.log(sum)
    total.innerHTML = convertToVND(sum);
    return sum;
  }

  function updateQuantity(userId, productId, quantity) {
    var currentDate = new Date();
    // Get the components of the date (year, month, day)
    var year = currentDate.getFullYear();
    var month = (currentDate.getMonth() + 1).toString().padStart(2, '0'); // Adding 1 because months are zero-based
    var day = currentDate.getDate().toString().padStart(2, '0');

    // Construct the formatted date string
    var formattedDate = year + '-' + month + '-' + day;

    if (isNaN(parseInt(quantity))) {
      quantity = 0;
    }
    data = { userId: userId, productId: productId, quantity: parseInt(quantity), timeAddToCart: formattedDate };
    //console.log(data);
    $.ajax({
      type: "GET",
      url: `/cart/updateCart`,
      data: data,
      contentType: 'application/json',
      dataType: "json",
      success: function (data) {
        //console.log(data);
        updateCartnumber();
      },
      error: function (result) {
        //console.log(result)
      }
    });
  }

  function capNhatSoLuongFromInput(ip) {
    //console.log(ip.value);
    //console.log(ip.getAttribute("id"));
    let id = ip.getAttribute("id");
    let userId = id.split("|")[0];
    let productId = id.split("|")[1];
    let num = ip.value;
    //console.log(num == "");
    //console.log(userId, productId, num);
    //console.log(num);
    updateQuantity(userId, productId, num);

  }
  function giamSoLuong(btn) {
    //console.log(btn)
    let idBtn = btn.getAttribute("id");
    let id = idBtn.substring(1);
    let userId = id.split("|")[0];
    let productId = id.split("|")[1];
    let num = document.getElementById(id).value;
    if (num == 1) {
      return;
    }
    num--;
    updateQuantity(userId, productId, num);
  }

  function tangSoLuong(btn) {
    let idBtn = btn.getAttribute("id");
    let id = idBtn.substring(1);
    let userId = id.split("|")[0];
    let productId = id.split("|")[1];
    let num = document.getElementById(id).value;
    num++;
    updateQuantity(userId, productId, num);
  }

  function renderListProductInCart(listCart) {
    let content = `<tr>
                    <th>&nbsp;&nbsp;#&nbsp;&nbsp;</th>
                    <th>Sản phẩm</th>
                    <th>Giá</th>
                    <th>Số lượng</th>
                    <th>Thành tiền</th>
                    <th>Thời gian</th>
                    <th>Xóa</th>
                </tr>`;
    for (let i = 0; i < listCart.length; i++) {
      content = content + `<tr>
                    <td>${i + 1}</td>
                    <td class="noPadding imgHide">
                        <a target="_blank" href="/product/detailProducts?id=${listCart[i].productId}" title="Xem chi tiết">
                           ${listCart[i].name}
                            <img src="${listCart[i].image}">
                        </a>
                    </td>
                    <td class="alignRight">${convertToVND((100 - listCart[i].discount) * listCart[i].price / 100)}</td>
                    <td class="soluong">
                      <div class="soluongFlex">
                        <button id= "d${listCart[i].userId}|${listCart[i].productId}" onclick="giamSoLuong(this)"><i class="fa fa-minus"></i></button>
                        <input class="LayID" readonly oninput="capNhatSoLuongFromInput(this)" id= "${listCart[i].userId}|${listCart[i].productId}" value="${listCart[i].quantity} ">
                <button id= "u${listCart[i].userId}|${listCart[i].productId}" onclick = "tangSoLuong(this)" > <i class="fa fa-plus"></i></button >
                      </div>
                    </td >
                    <td class="alignRight">${convertToVND((100 - listCart[i].discount) * listCart[i].price * listCart[i].quantity / 100)}</td>
                    <td style="text-align: center">${listCart[i].timeAddToCart.substring(0, 10)}</td>
                    <td class="noPadding"> <i class="fa fa-trash" onclick="xoaSanPhamTrongGioHang(this)"></i> </td>
                </tr > `
    }


    // tinh tong tien 
    let sum = tinhTongtien(listCart)

    content += `  <tr tr style = "font-weight:bold; text-align:center" >
                    <td colspan="4">TỔNG TIỀN: </td>
                    <td class="alignRight">${convertToVND(sum)}</td>
                    <td class="thanhtoan" onclick="thanhToan()"> Đặt Hàng </td>
                    <td class="xoaHet" onclick="xoaHet()"> Xóa hết </td>
                </tr >`

    listProductinCart.innerHTML = content;
  }

  function xoaSanPhamTrongGioHang(element) {
    let id = element.parentElement.parentElement.querySelector('td:nth-child(4)').querySelector('input').getAttribute("id");
    let userId = id.split("|")[0];
    let productId = id.split("|")[1];
    deleteProductInCart(userId, productId);
  }

  function deleteProductInCart(userId, productId) {
    data = { userId: userId, productId: productId };
    $.ajax({
      type: "GET",
      url: `/cart/deleteCart`,
      data: data,
      contentType: 'application/json',
      dataType: "json",
      success: function (data) {
        //console.log(data);
        updateCartnumber();
      },
      error: function (result) {
        console.log(result)
      }
    });
  }

  function xoaHet() {
    let productIds = [];
    for (let i = 0; i < document.querySelectorAll('.LayID').length; i++) {
      let productId = document.querySelectorAll('.LayID')[i].id.split("|")[1];
      productIds.push(productId);
    }
    let userId = document.querySelector("tr:nth-child(2) .soluong input").id.split("|")[0];
    for (let i = 0; i < productIds.length; i++) {
      deleteProductInCart(userId, productIds[i]);
    }
  }


  /// SOcket 
  async function sendMesstoAdmin(data) {
    socket.emit('channelOrder', { data: data, toEmail: 'leminhhoang123456le@gmail.com' })
  }

  // Xử lí hiện modal dialog thanh toán sản phẩm


  // When the user clicks the button, open the modal 
  function thanhToan() {
    paymentdetail.style.display = "table";
  }

  function initialDetailPayent() {
    // console.log(fullname);
    fullname.value = localStorage.getItem("fullname");
    // console.log(total);
  }
  initialDetailPayent();
  function checkPhoneNumber(name) {
    if (name.indexOf(" ") > 0) return 1;
    if (!/^[0-9]*$/.test(name)) return 2;
    if (name.charAt(0) != "0") return 3;
    if (name.length != 10) return 4;
    return 0;
  }
  //
  function addAlertBox(text, bgcolor, textcolor, time) {
    var al = document.getElementById('alert');
    al.childNodes[0].nodeValue = text;
    al.style.backgroundColor = bgcolor;
    al.style.opacity = 1;
    al.style.zIndex = 200;

    if (textcolor) al.style.color = textcolor;
    if (time)
      setTimeout(function () {
        al.style.opacity = 0;
        al.style.zIndex = 0;
      }, time);
  }
  // process payment
  async function processPaymentByCash(idUser, address, recievername, phonenumber, time) {
    let data = { idUser: idUser, address: address, recievername: recievername, phonenumber: phonenumber, time: time }
    const res = await fetch(`/order/orderpayment`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    });

    let resJson = await res.json();
    if (res.ok) {
      //console.log(resJson);
      sendMesstoAdmin(resJson.data)
      xoaHet();
      addAlertBox(resJson.msg, '#17c671', '#fff', 3500);
    }
    else {
      //console.log(resJson);
      addAlertBox(resJson.msg, '#FF3333', '#fff', 3500);
    }
  }

  async function processPaymentOnline(idUser, address, recievername, phonenumber, time, content) {
    // xu li o he thong phu

    let data = { idUser: idUser, address: address, recievername: recievername, phonenumber: phonenumber, time: time }
    const res = await fetch(`/order/orderpayment`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    });
    let resJson = await res.json();
    if (res.ok) {
      //console.log(resJson);

      //addAlertBox(resJson.msg, '#17c671', '#fff', 3500);
      var data1 = resJson.data;
      // xu li thanh toan
      //email, total, time, noidung, idhoadon, token
      let data2 = {
        email: localStorage.getItem("email"), total: data1.totalCost, time: data1.timeOrder.slice(0, 19).replace("T", " "),
        noidung: content, idhoadon: data1.orderId, token: localStorage.getItem("token")
      };
      console.log(data2);
      const res1 = await fetch(`https://localhost:3002/gdtt`, {
        method: "POST",
        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(data2),
      });
      let resJson1 = await res1.json();
      console.log(resJson1);
      if (res1.ok) {
        // cập nhật lại trạng thái đơn hàng là đã thanh toán
        //updateorder
        let data3 = { idOrder: data1.orderId }
        const res2 = await fetch(`/order/updateorder`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data3),
        });
        if (res2.ok) {
          sendMesstoAdmin(resJson.data)
          xoaHet();
          addAlertBox("Đặt hàng và thanh toán thành công", '#17c671', '#fff', 3500);
        }
      }
      else {
        // rollback
        let data4 = { idOrder: data1.orderId }
        const res2 = await fetch(`/order/rollbackorder`, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data4),
        });
        //idOrder
        addAlertBox(resJson1.msg, '#FF3333', '#fff', 3500);
      }
    }
    else {
      //console.log(resJson);
      addAlertBox(resJson.msg, '#FF3333', '#fff', 3500);
    }
  }
  // check du lieu dau vao
  myform.addEventListener("submit", async function (e) {
    e.preventDefault();
    const data = $(this)
      .serializeArray()
      .reduce((obj, field) => ({ ...obj, [field.name]: field.value }), {});

    console.log(data);
    // Kieerm tra so dien thoai
    const numError = checkPhoneNumber(data.phone);
    if (numError === 0) { }
    else if (numError === 1)
      addAlertBox('Số điện thoại không được chứa khoảng trống', '#FF3333', '#fff', 3500);
    else if (numError === 2)
      addAlertBox('Số điện thoại chỉ được chứa số', '#FF3333', '#fff', 3500);
    else if (numError === 3)
      addAlertBox('Số điện thoại phải bắt đầu bằng 0', '#FF3333', '#fff', 3500);
    else if (numError === 4)
      addAlertBox('Số điện thoại phải có độ dài là 10', '#FF3333', '#fff', 3500);
    var currentDateUTC = new Date();
    var currentDate = new Date(currentDateUTC.getTime() + 7 * 60 * 60 * 1000);

    // Convert the Date object to an ISO string
    var isoString = currentDate.toISOString();

    // Remove milliseconds and format the string for SQL timestamp
    var sqlTimestamp = isoString.slice(0, 19).replace("T", " ");
    //console.log(sqlTimestamp);
    if (data.paymentmethod == "cash") {
      await processPaymentByCash(localStorage.getItem("idUser"), data.address, data.fullname, data.phone, sqlTimestamp);
    }
    else if (data.paymentmethod == "online") {
      // console.log(data.noidung)
      await processPaymentOnline(localStorage.getItem("idUser"), data.address, data.fullname, data.phone, sqlTimestamp, data.message);
    }
    else {
      addAlertBox('Phương thức thanh toán không hợp lệ', '#FF3333', '#fff', 3500);
    }

    //console.log(data);
    /* const res = await fetch(`${AuthServerURL}/login`, {
       method: "POST",
       headers: {
         "Content-Type": "application/json",
       },
       credentials: "include",
       body: JSON.stringify(data),
     });
    */

  })










</script>